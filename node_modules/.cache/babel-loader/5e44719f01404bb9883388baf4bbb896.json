{"ast":null,"code":"import { projectStorage } from '../firebase/config';\nimport { useState, useEffect } from 'react';\n\nconst useStorage = file => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    // references\n    const storageRef = projectStorage.ref(file.name);\n    storageRef.put(file).on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["C:/Users/rumen/Documents/GitHub/Octane/src/hooks/useStorage.js"],"names":["projectStorage","useState","useEffect","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL"],"mappings":"AAAA,SAASA,cAAT,QAA+B,oBAA/B;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAE3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AAEA,UAAMS,UAAU,GAAGX,cAAc,CAACY,GAAf,CAAmBR,IAAI,CAACS,IAAxB,CAAnB;AAGAF,IAAAA,UAAU,CAACG,GAAX,CAAeV,IAAf,EAAqBW,EAArB,CAAwB,eAAxB,EAA0CC,IAAD,IAAU;AACjD,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAb,MAAAA,WAAW,CAACW,UAAD,CAAX;AACD,KAHD,EAGIG,GAAD,IAAS;AACVZ,MAAAA,QAAQ,CAACY,GAAD,CAAR;AACD,KALD,EAKG,YAAY;AAEb,YAAMX,GAAG,GAAG,MAAME,UAAU,CAACU,cAAX,EAAlB;AACAX,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD,KATD;AAUD,GAhBQ,EAgBN,CAACL,IAAD,CAhBM,CAAT;AAkBA,SAAO;AAAEC,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AACD,CAzBD;;AA2BA,eAAeJ,UAAf","sourcesContent":["import { projectStorage } from '../firebase/config';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useStorage = (file) => {\r\n    \r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    \r\n    const storageRef = projectStorage.ref(file.name);\r\n    \r\n    \r\n    storageRef.put(file).on('state_changed', (snap) => {\r\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n      setProgress(percentage);\r\n    }, (err) => {\r\n      setError(err);\r\n    }, async () => {\r\n        \r\n      const url = await storageRef.getDownloadURL();\r\n      setUrl(url);\r\n    })\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n}\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}