{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rumen\\\\Documents\\\\GitHub\\\\Octane\\\\src\\\\comps\\\\UploadForm.js\";\nimport React, { useState } from \"react\";\n\nconst UploadForm = () => {\n  // eslint-disable-next-line\n  const [file, setFile] = useState(null);\n  const types = ['image/png', 'image/jpeg', 'image/jpg'];\n  const [error, setError] = useState(null);\n\n  const changeHandler = e => {\n    let selected = e.target.files[0];\n    console.log(selected);\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError('');\n    } else {\n      setFile(null);\n      setError('Please select an image file (png, jpeg or jpg)');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }\n  }, error), file && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 22\n    }\n  }, file)));\n};\n\nexport default UploadForm;","map":{"version":3,"sources":["C:/Users/rumen/Documents/GitHub/Octane/src/comps/UploadForm.js"],"names":["React","useState","UploadForm","file","setFile","types","error","setError","changeHandler","e","selected","target","files","console","log","includes","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB;AACJ,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBH,QAAQ,CAAC,IAAD,CAA/B;AACA,QAAMI,KAAK,GAAG,CAAC,WAAD,EAAa,YAAb,EAA2B,WAA3B,CAAd;AACA,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,IAAD,CAAhC;;AACA,QAAMO,aAAa,GAAIC,CAAD,IAAO;AACzB,QAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AAEA,QAAGA,QAAQ,IAAIL,KAAK,CAACU,QAAN,CAAeL,QAAQ,CAACM,IAAxB,CAAf,EAA8C;AAC1CZ,MAAAA,OAAO,CAACM,QAAD,CAAP;AACAH,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAHD,MAGO;AACHH,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAG,MAAAA,QAAQ,CAAC,gDAAD,CAAR;AACH;AAEJ,GAZD;;AAcI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBA,KAAzB,CADd,EAEKH,IAAI,iBAAI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBA,IAAvB,CAFb,CAFA,CADJ;AAWH,CA9BD;;AAgCA,eAAeD,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst UploadForm = () => {\r\n    // eslint-disable-next-line\r\nconst [file,setFile] = useState(null);\r\nconst types = ['image/png','image/jpeg', 'image/jpg'];\r\nconst[error,setError] = useState(null);\r\nconst changeHandler = (e) => {\r\n    let selected = e.target.files[0];\r\n    console.log(selected);\r\n\r\n    if(selected && types.includes(selected.type)) {\r\n        setFile(selected);\r\n        setError('');\r\n    } else {\r\n        setFile(null);\r\n        setError('Please select an image file (png, jpeg or jpg)');\r\n    }\r\n        \r\n}\r\n\r\n    return(\r\n        <form>\r\n        <input type=\"file\" onChange={changeHandler} />\r\n        <div className=\"output\">\r\n            {error && <div className=\"error\">{ error }</div>}\r\n            {file && <div className=\"file\">{file}</div>}\r\n        </div>\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default UploadForm;"]},"metadata":{},"sourceType":"module"}