{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { projectStorage } from '../firebase/config';\n\nconst useStorage = file => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    // references\n    const storageRef = null;\n\n    if (!firebase.apps.length) {\n      storageRef = projectStorage.ref(file.name);\n    }\n\n    storageRef.put(file).on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["C:/Users/rumen/Documents/GitHub/Octane/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","firebase","apps","length","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,oBAA/B;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAE3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMU,UAAU,GAAG,IAAnB;;AACA,QAAI,CAACC,QAAQ,CAACC,IAAT,CAAcC,MAAnB,EAA2B;AAC3BH,MAAAA,UAAU,GAAGT,cAAc,CAACa,GAAf,CAAmBX,IAAI,CAACY,IAAxB,CAAb;AACC;;AAEDL,IAAAA,UAAU,CAACM,GAAX,CAAeb,IAAf,EAAqBc,EAArB,CAAwB,eAAxB,EAA0CC,IAAD,IAAU;AACjD,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAhB,MAAAA,WAAW,CAACc,UAAD,CAAX;AACD,KAHD,EAGIG,GAAD,IAAS;AACVf,MAAAA,QAAQ,CAACe,GAAD,CAAR;AACD,KALD,EAKG,YAAY;AAEb,YAAMd,GAAG,GAAG,MAAME,UAAU,CAACa,cAAX,EAAlB;AACAd,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD,KATD;AAUD,GAjBQ,EAiBN,CAACL,IAAD,CAjBM,CAAT;AAmBA,SAAO;AAAEC,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AACD,CA1BD;;AA4BA,eAAeJ,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { projectStorage } from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n    \r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // references\r\n    const storageRef = null;\r\n    if (!firebase.apps.length) {\r\n    storageRef = projectStorage.ref(file.name);\r\n    }\r\n    \r\n    storageRef.put(file).on('state_changed', (snap) => {\r\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n      setProgress(percentage);\r\n    }, (err) => {\r\n      setError(err);\r\n    }, async () => {\r\n        \r\n      const url = await storageRef.getDownloadURL();\r\n      setUrl(url);\r\n    });\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n}\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}